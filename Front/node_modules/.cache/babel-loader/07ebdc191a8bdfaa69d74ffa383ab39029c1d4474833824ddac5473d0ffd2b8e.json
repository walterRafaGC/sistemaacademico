{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WALTER\\\\Documents\\\\GitHub\\\\sistemaacademico\\\\Front\\\\src\\\\views\\\\Paga.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Paga = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [paymentError, setPaymentError] = useState(null);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n    const cardElement = elements.getElement(CardElement);\n\n    // Crear token con la tarjeta\n    const {\n      token,\n      error\n    } = await stripe.createToken(cardElement);\n    if (error) {\n      console.error(error);\n      setPaymentError(error.message);\n    } else {\n      // Enviar el token al servidor para procesar el pago\n      enviarTokenAlServidor(token);\n    }\n  };\n  const enviarTokenAlServidor = async token => {\n    try {\n      // Aquí debes enviar el token al servidor para procesar el pago\n      // Puedes usar fetch u otra librería para hacer la solicitud al servidor\n      // Ejemplo: \n      const response = await fetch(\"/ruta-del-servidor\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          token: token.id\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Error al procesar el pago en el servidor\");\n      }\n      console.log(\"Pago procesado correctamente\");\n    } catch (error) {\n      console.error(error);\n      setPaymentError(\"Error al procesar el pago. Por favor, inténtalo de nuevo.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cardElement\",\n        className: \"form-label\",\n        children: \"Tarjeta de cr\\xE9dito\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {\n        id: \"cardElement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), paymentError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: [\"Error: \", paymentError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      children: \"Pagar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Paga, \"Gz2uD+66yFCbd2fx/dtVdo+WgIc=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = Paga;\nexport default Paga;\nvar _c;\n$RefreshReg$(_c, \"Paga\");","map":{"version":3,"names":["React","useState","CardElement","useStripe","useElements","jsxDEV","_jsxDEV","Paga","_s","stripe","elements","paymentError","setPaymentError","handleSubmit","event","preventDefault","cardElement","getElement","token","error","createToken","console","message","enviarTokenAlServidor","response","fetch","method","headers","body","JSON","stringify","id","ok","Error","log","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","role","type","_c","$RefreshReg$"],"sources":["C:/Users/WALTER/Documents/GitHub/sistemaacademico/Front/src/views/Paga.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\n\r\nconst Paga = () => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [paymentError, setPaymentError] = useState(null);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    // Crear token con la tarjeta\r\n    const { token, error } = await stripe.createToken(cardElement);\r\n\r\n    if (error) {\r\n      console.error(error);\r\n      setPaymentError(error.message);\r\n    } else {\r\n      // Enviar el token al servidor para procesar el pago\r\n      enviarTokenAlServidor(token);\r\n    }\r\n  };\r\n\r\n  const enviarTokenAlServidor = async (token) => {\r\n    try {\r\n      // Aquí debes enviar el token al servidor para procesar el pago\r\n      // Puedes usar fetch u otra librería para hacer la solicitud al servidor\r\n      // Ejemplo: \r\n      const response = await fetch(\"/ruta-del-servidor\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ token: token.id }),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(\"Error al procesar el pago en el servidor\");\r\n      }\r\n  \r\n      console.log(\"Pago procesado correctamente\");\r\n    } catch (error) {\r\n      console.error(error);\r\n      setPaymentError(\"Error al procesar el pago. Por favor, inténtalo de nuevo.\");\r\n    }\r\n  };  \r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"cardElement\" className=\"form-label\">\r\n          Tarjeta de crédito\r\n        </label>\r\n        <CardElement id=\"cardElement\" />\r\n      </div>\r\n      {paymentError && (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          Error: {paymentError}\r\n        </div>\r\n      )}\r\n      <button type=\"submit\" className=\"btn btn-primary\">\r\n        Pagar\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Paga;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
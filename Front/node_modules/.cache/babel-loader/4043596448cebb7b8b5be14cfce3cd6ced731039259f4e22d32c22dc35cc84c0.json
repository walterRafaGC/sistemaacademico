{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WALTER\\\\Documents\\\\GitHub\\\\sistemaacademico\\\\Front\\\\src\\\\views\\\\ChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Asegúrate de tener axios instalado: npm install axios\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatBox() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [chatMessages, setChatMessages] = useState([]);\n  const sendMessage = async () => {\n    try {\n      await axios.post('http://localhost:8080/api/chat/send', {\n        message\n      });\n      // Limpiar el mensaje después de enviarlo, si es necesario\n      setMessage('');\n    } catch (error) {\n      console.error('Error al enviar el mensaje:', error);\n    }\n  };\n  useEffect(() => {\n    // Lógica para recibir mensajes del servidor\n    const interval = setInterval(async () => {\n      try {\n        const response = await axios.get('URL_PARA_RECIBIR_MENSAJES_DEL_SERVIDOR');\n        // Actualizar el estado con los mensajes recibidos del servidor\n        setChatMessages(response.data);\n      } catch (error) {\n        console.error('Error al recibir mensajes del servidor:', error);\n      }\n    }, 2000); // Intervalo de tiempo para obtener mensajes (ejemplo: cada 2 segundos)\n\n    return () => clearInterval(interval); // Limpia el intervalo cuando el componente se desmonta\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat\",\n      children: chatMessages.map((chatMessage, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: chatMessage\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Escribe un mensaje...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Enviar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatBox, \"n0gGZTdr2GCIha2HI49MYCWWeXc=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ChatBox","_s","message","setMessage","chatMessages","setChatMessages","sendMessage","post","error","console","interval","setInterval","response","get","data","clearInterval","children","id","map","chatMessage","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/WALTER/Documents/GitHub/sistemaacademico/Front/src/views/ChatBox.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'; // Asegúrate de tener axios instalado: npm install axios\r\n\r\nfunction ChatBox() {\r\n    const [message, setMessage] = useState('');\r\n    const [chatMessages, setChatMessages] = useState([]);\r\n\r\n    const sendMessage = async () => {\r\n        try {\r\n            await axios.post('http://localhost:8080/api/chat/send', { message });\r\n            // Limpiar el mensaje después de enviarlo, si es necesario\r\n            setMessage('');\r\n        } catch (error) {\r\n            console.error('Error al enviar el mensaje:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Lógica para recibir mensajes del servidor\r\n        const interval = setInterval(async () => {\r\n            try {\r\n                const response = await axios.get('URL_PARA_RECIBIR_MENSAJES_DEL_SERVIDOR');\r\n                // Actualizar el estado con los mensajes recibidos del servidor\r\n                setChatMessages(response.data);\r\n            } catch (error) {\r\n                console.error('Error al recibir mensajes del servidor:', error);\r\n            }\r\n        }, 2000); // Intervalo de tiempo para obtener mensajes (ejemplo: cada 2 segundos)\r\n\r\n        return () => clearInterval(interval); // Limpia el intervalo cuando el componente se desmonta\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"chat\">\r\n                {/* Mostrar los mensajes del chat */}\r\n                {chatMessages.map((chatMessage, index) => (\r\n                    <div key={index}>{chatMessage}</div>\r\n                ))}\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n                placeholder=\"Escribe un mensaje...\"\r\n            />\r\n            <button onClick={sendMessage}>Enviar</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatBox;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAMT,KAAK,CAACU,IAAI,CAAC,qCAAqC,EAAE;QAAEL;MAAQ,CAAC,CAAC;MACpE;MACAC,UAAU,CAAC,EAAE,CAAC;IAClB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACvD;EACJ,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACZ;IACA,MAAMc,QAAQ,GAAGC,WAAW,CAAC,YAAY;MACrC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,wCAAwC,CAAC;QAC1E;QACAR,eAAe,CAACO,QAAQ,CAACE,IAAI,CAAC;MAClC,CAAC,CAAC,OAAON,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MACnE;IACJ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAMO,aAAa,CAACL,QAAQ,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAKkB,EAAE,EAAC,MAAM;MAAAD,QAAA,EAETZ,YAAY,CAACc,GAAG,CAAC,CAACC,WAAW,EAAEC,KAAK,kBACjCrB,OAAA;QAAAiB,QAAA,EAAkBG;MAAW,GAAnBC,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNzB,OAAA;MACI0B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAExB,OAAQ;MACfyB,QAAQ,EAAGC,CAAC,IAAKzB,UAAU,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CI,WAAW,EAAC;IAAuB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACFzB,OAAA;MAAQgC,OAAO,EAAEzB,WAAY;MAAAU,QAAA,EAAC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEd;AAACvB,EAAA,CA9CQD,OAAO;AAAAgC,EAAA,GAAPhC,OAAO;AAgDhB,eAAeA,OAAO;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}